{"frames":[{"func":"degree(network)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"as.edgelist.sna(dat)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(x, as.edgelist.sna, attrname = attrname, as.digraph = as.digraph, \n    suppress.diag = suppress.diag, force.bipartite = force.bipartite)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(x, as.edgelist.sna, attrname = attrname, as.digraph = as.digraph, \n    suppress.diag = suppress.diag, force.bipartite = force.bipartite)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"as.edgelist.sna input must be an adjacency matrix/array, edgelist matrix, network, or sparse matrix, or list thereof.\\n\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in FUN(X[[i]], ...) : \n  as.edgelist.sna input must be an adjacency matrix/array, edgelist matrix, network, or sparse matrix, or list thereof.\n"}