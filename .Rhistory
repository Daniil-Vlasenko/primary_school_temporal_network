geom_histogram(aes(y=..density..))
library(nortest)
print(paste("Pearson", pearson.test(data.v$degree)$p))
print(paste("Lilliefors", lillie.test(data.v$degree)$p))
print(paste("Anderson.Darling", ad.test(data.v$degree)$p))
print(paste("Shapiro.Wilk", shapiro.test(data.v$degree)$p))
count.of.teachers <- data.v %>% filter(class == "Teachers") %>% nrow()
(data.v %>% arrange(-degree))[1:count.of.teachers,]
edge_density(network)
class <- unique(V(network)$class)
for(i in class) {
subgraph <- induced_subgraph(network, V(network)[class == i])
print(paste("density of", i, ":", edge_density(subgraph)))
}
data.e %>%
ggplot(aes(from, to)) +
geom_bin2d()
data.e <- as_long_data_frame(network)
data.e %>%
ggplot(aes(from, to)) +
geom_bin2d()
data.e %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none")
data.e
data.e <- as_long_data_frame(network) %>%
mutate(from = as.character(from), to = as.character(to))
data.e %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none")
data.e %>%
ggplot(aes(from, to)) +
geom_bin2d()
data.e %>% filter(from_class == "1B", to_class == "1B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none")
data.e %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
data.e %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp = data.frame(to = data.e$from, from = data.e$to)
rbind(data.e, tmp) %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
rbind(data.e, tmp)
rbind(data.e, tmp)
data.e
rbind(data.e %>% select(from, to), tmp)
rbind(data.e %>% select(from, to), tmp) %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp = data.frame(to = data.e$from, from = data.e$to, Freq = data.e$Freq)
rbind(data.e %>% select(from, to, Freq), tmp) %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp = data.frame(to = data.e$from, from = data.e$to, Freq = data.e$Freq,
to_class = data.e$from, from_class = data.e$to)
rbind(data.e %>% select(from, to, Freq), tmp) %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
rbind(data.e %>% select(from, to, Freq, to_class, from_class), tmp) %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp <- data.frame(to = data.e$from, from = data.e$to, Freq = data.e$Freq,
to_class = data.e$from, from_class = data.e$to)
tmp <- rbind(data.e %>% select(from, to, Freq, to_class, from_class), tmp)
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp %>% filter(from_class == "1B", to_class == "1B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp
tmp %>% filter(from_class == "1B", to_class == "1B")
data.e %>% filter(from_class == "1B", to_class == "1B")
tmp <- data.frame(to = data.e$from, from = data.e$to, Freq = data.e$Freq,
to_class = data.e$from_class, from_class = data.e$to_class)
tmp <- rbind(data.e %>% select(from, to, Freq, to_class, from_class), tmp)
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp %>% filter(from_class == "1B", to_class == "1B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="black", mid="black", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="white", mid="grey", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="white", mid="grey", high="black") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray47", mid="gray26", high="gray8") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
data.e <- as_long_data_frame(network) %>%
mutate(from = as.character(from), to = as.character(to))
tmp <- data.frame(to = data.e$from, from = data.e$to, Freq = data.e$Freq,
to_class = data.e$from_class, from_class = data.e$to_class)
tmp <- rbind(data.e %>% select(from, to, Freq, to_class, from_class), tmp)
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray50", mid="gray25", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray50", mid="gray25", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray50", mid="gray25", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray50", mid="gray25", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank()
)
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray50", mid="gray25", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray50", mid="gray25", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major = element_blank(),
panel.background = element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray50", mid="gray25", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray50", mid="gray25", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray50", mid="gray25", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
ax
panel.background = element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray50", mid="gray25", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.background = element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray50", mid="gray25", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
data.e <- as_long_data_frame(network) %>%
mutate(from = as.character(from), to = as.character(to))
tmp <- data.frame(to = data.e$from, from = data.e$to, Freq = data.e$Freq,
to_class = data.e$from_class, from_class = data.e$to_class)
tmp <- rbind(data.e %>% select(from, to, Freq, to_class, from_class), tmp)
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
distances(network)
mean_distance(network)
data.frame(distances(network))
data.frame(distances(network)) %>% melt()
library(reshape2)
data.frame(distances(network)) %>% melt()
data.frame(distances(network))
data.frame(distances(network)) %>% melt()
class(distances(network))
data.frame(distances(network)) %>% melt()
distances(network)
data.frame(distances(network))
max(distances(network))
mix(distances(network))
min(distances(network))
max(distances(network))
transitivity
transitivity(network)
transitivity(network, type="local")
V(network)$transitivity <- transitivity(network, type="local")
V(network)$transitivity[1:50]
transitivity(network)
(data.v %>% arrange(-transitivity))[1:count.of.teachers,]
data.v$transitivity <- V(network)$transitivity
(data.v %>% arrange(-transitivity))[1:count.of.teachers,]
set.seed(1)
pal<-brewer.pal(length(unique(V(network)$class)), "Set3")
plot(network, edge.color='black', vertex.label.cex=0.3,
vertex.color=pal[as.numeric(as.factor(vertex_attr(network, "class")))],
vertex.size=sqrt(V(network)$degree)/2.5, edge.width=sqrt(E(network)$Freq/3000),
layout=layout.fruchterman.reingold)
set.seed(1)
pal<-brewer.pal(length(unique(V(network)$class)), "Set3")
plot(network, edge.color='black',
vertex.color=pal[as.numeric(as.factor(vertex_attr(network, "class")))],
vertex.size=sqrt(V(network)$degree)/2.5, edge.width=sqrt(E(network)$Freq/3000),
layout=layout.fruchterman.reingold)
vertex_attr(network, "class")
?pal
plot(network, edge.color='black', vertex.label.cex=0.3,
vertex.color=pal[as.numeric(as.factor(vertex_attr(network, "class")))],
vertex.size=sqrt(V(network)$degree)/2.5, edge.width=sqrt(E(network)$Freq/3000),
layout=layout.fruchterman.reingold)
plot(network, edge.color='black', vertex.label.cex=0.00001,
vertex.color=pal[as.numeric(as.factor(vertex_attr(network, "class")))],
vertex.size=sqrt(V(network)$degree)/2.5, edge.width=sqrt(E(network)$Freq/3000),
layout=layout.fruchterman.reingold)
pal
pal[as.numeric(as.factor(vertex_attr(network, "class")))]
vertex_attr(network, "class")
as.factor(vertex_attr(network, "class"))
as.numeric(as.factor(vertex_attr(network, "class")))
plot(network, edge.color='black', vertex.label.cex=0.00001,
vertex.color=pal[as.numeric(as.factor(vertex_attr(network, "class")))],
vertex.size=sqrt(V(network)$degree)/2.5, edge.width=sqrt(E(network)$Freq/3000),
layout=layout.fruchterman.reingold)
lc <- cluster_louvain(Stucont) # Create a cluster based on the Louvain method
lc <- cluster_louvain(network) # Create a cluster based on the Louvain method
communities(lc) # You can check which vertices belongs to which clusters.
plot(lc, network, edge.color = 'black', vertex.label.cex=0.00001,
vertex.color=pal[as.numeric(as.factor(vertex_attr(network, "class")))],
vertex.size=sqrt(V(network)$degree)/2.5, edge.width=sqrt(E(network)$Freq/3000),
layout=layout.fruchterman.reingold)
plot(lc, network, edge.color = 'black', vertex.label.cex=0.00001,
vertex.color=pal[as.numeric(as.factor(vertex_attr(network, "class")))],
vertex.size=sqrt(V(network)$degree)/2.5, edge.width=sqrt(E(network)$Freq/3000),
layout=layout.fruchterman.reingold)
lc <- cluster_louvain(network)
#2. Plotting the Betweenness Centrality network with the community detection
set.seed(1001) # To duplicate the computer process and create exactly the same network repetitively you should set the seed.
plot(lc, network, edge.color = 'black', vertex.label.cex=0.3,
vertex.color=pal[as.numeric(as.factor(vertex_attr(network, "class")))],
vertex.size=sqrt(V(network)$degree)/2.5, edge.width=sqrt(E(network)$Freq/3000),
layout=layout.fruchterman.reingold)
plot(lc, network, edge.color = 'black', vertex.label.cex=0.3,
vertex.color=pal[as.numeric(as.factor(vertex_attr(network, "class")))],
vertex.size=sqrt(V(network)$degree)/2.5, edge.width=sqrt(E(network)$Freq/3000),
layout=layout.fruchterman.reingold)
lc <- cluster_louvain(network)
#2. Plotting the Betweenness Centrality network with the community detection
set.seed(1001) # To duplicate the computer process and create exactly the same network repetitively you should set the seed.
plot(lc, network, edge.color = 'black', vertex.label.cex=0.0001,
vertex.color=pal[as.numeric(as.factor(vertex_attr(network, "class")))],
vertex.size=sqrt(V(network)$degree)/2.5, edge.width=sqrt(E(network)$Freq/3000),
layout=layout.fruchterman.reingold)
library(dplyr)
library(igraph)
library(tidyr)
library(RColorBrewer)
data1 <- read.csv("primaryschool.csv", sep="\t", header=FALSE)
colnames(data1) <- c("time", "i", "j", "classi", "classj")
data2 <- read.csv("metadata_primaryschool.txt", sep="\t", header=FALSE)
colnames(data2) <- c("i", "class", "sex")
edges <- data.frame(table(data1 %>% dplyr::select(i, j))) %>%
filter(Freq > 0)
network <- graph_from_data_frame(edges, directed=FALSE, vertices=data2)
set.seed(1)
pal<-brewer.pal(length(unique(V(network)$class)), "Set3")
plot(network, edge.color='black', vertex.label.cex=0.00001,
vertex.color=pal[as.numeric(as.factor(vertex_attr(network, "class")))],
vertex.size=sqrt(V(network)$degree)/2.5, edge.width=sqrt(E(network)$Freq/3000),
layout=layout.fruchterman.reingold)
