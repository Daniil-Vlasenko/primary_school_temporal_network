panel.background = element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
data.e <- as_long_data_frame(network) %>%
mutate(from = as.character(from), to = as.character(to))
tmp <- data.frame(to = data.e$from, from = data.e$to, Freq = data.e$Freq,
to_class = data.e$from_class, from_class = data.e$to_class)
tmp <- rbind(data.e %>% select(from, to, Freq, to_class, from_class), tmp)
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray100", mid="gray100", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
data.e <- as_long_data_frame(network) %>%
mutate(from = as.character(from), to = as.character(to))
tmp <- data.frame(to = data.e$from, from = data.e$to, Freq = data.e$Freq,
to_class = data.e$from_class, from_class = data.e$to_class)
tmp <- rbind(data.e %>% select(from, to, Freq, to_class, from_class), tmp)
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
data.cor %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray80", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
theme(panel.background = element_blank())
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
data.cor %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray90", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
theme(panel.background = element_blank())
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
data.cor %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
theme(panel.background = element_blank())
data.cor %>%
ggplot(aes(x=as.numeric(from_degree), y=as.numeric(to_degree), size=probability)) +
geom_point()
data.cor %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
theme(panel.background = element_blank()) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth")
data.cor %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
theme(panel.background = element_blank()) +
stat_smooth()
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
data.cor %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
stat_smooth()
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
data.cor %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
theme(panel.background = element_blank())
data.cor %>%
ggplot(aes(x=as.numeric(from_degree), y=as.numeric(to_degree), size=probability)) +
geom_point() +
stat_smooth()
data.cor <- data.cor %>%
mutate(from_degree=as.numeric(from_degree), to_degree=as.numeric(to_degree))
cor()
cor(data.cor$from_degree, data.cor$to_degree)
cor(data.cor$from_degree, data.cor$to_degree, method="pearson")
cor(data.cor$from_degree, data.cor$to_degree, method="spearman")
cor(data.cor$from_degree, data.cor$to_degree, method="pearson")
cor(data.cor$from_degree, data.cor$to_degree, method="spearman")
cor(data.cor$from_degree, data.cor$to_degree, method="kendal")
data.cor <- data.cor %>%
mutate(from_degree=as.numeric(from_degree), to_degree=as.numeric(to_degree))
cor(data.cor$from_degree, data.cor$to_degree, method="pearson")
cor(data.cor$from_degree, data.cor$to_degree, method="spearman")
library(dplyr)
library(igraph)
library(tidyr)
data1 <- read.csv("primaryschool.csv", sep="\t", header=FALSE)
colnames(data1) <- c("time", "i", "j", "classi", "classj")
data2 <- read.csv("metadata_primaryschool.txt", sep="\t", header=FALSE)
colnames(data2) <- c("i", "class", "sex")
edges <- data.frame(table(data1 %>% dplyr::select(i, j))) %>%
filter(Freq > 0)
network <- graph_from_data_frame(edges, directed=FALSE, vertices=data2)
network
V(network)$sex[V(network)$sex == "Unknown"] <- NA
V(network)$sex[1:50]
V(network)$class[1:50]
E(network)$Freq[1:50]
V(network)$degree <- degree(network)
V(network)$degree[1:50]
print(paste("Mean of sample:", mean(V(network)$degree)))
print(paste("Variance of sample:", var(V(network)$degree)))
print(paste("Median of sample:", median(V(network)$degree)))
print(paste("Min of sample:", min(V(network)$degree)))
print(paste("Max of sample:", max(V(network)$degree)))
library(ggplot2)
data.v <- data.frame(name=V(network)$name,
class=as.factor(V(network)$class),
degree=V(network)$degree)
data.v %>%
ggplot(aes(x=degree)) +
geom_histogram(aes(y=..density..))
library(nortest)
print(paste("Pearson", pearson.test(data.v$degree)$p))
print(paste("Lilliefors", lillie.test(data.v$degree)$p))
print(paste("Anderson.Darling", ad.test(data.v$degree)$p))
print(paste("Shapiro.Wilk", shapiro.test(data.v$degree)$p))
count.of.teachers <- data.v %>% filter(class == "Teachers") %>% nrow()
(data.v %>% arrange(-degree))[1:count.of.teachers,]
edge_density(network)
class <- unique(V(network)$class)
for(i in class) {
subgraph <- induced_subgraph(network, V(network)[class == i])
print(paste("density of", i, ":", edge_density(subgraph)))
}
data.e <- as_long_data_frame(network) %>%
mutate(from = as.character(from), to = as.character(to))
tmp <- data.frame(to = data.e$from, from = data.e$to, Freq = data.e$Freq,
to_class = data.e$from_class, from_class = data.e$to_class)
tmp <- rbind(data.e %>% select(from, to, Freq, to_class, from_class), tmp)
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
mean_distance(network)
max(distances(network))
transitivity(network)
V(network)$transitivity <- transitivity(network, type="local")
V(network)$transitivity[1:50]
data.v$transitivity <- V(network)$transitivity
(data.v %>% arrange(-transitivity))[1:10,]
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
data.cor %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
theme(panel.background = element_blank())
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
tmp <- data.frame(to_degree = data.cor$from_degree,
from_degree = data.cor$to_degree,
Freq = data.cor$probability)
tmp <- rbind(data.cor, tmp)
data.cor
data.cor; tmp
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
tmp <- data.frame(to_degree = data.cor$from_degree,
from_degree = data.cor$to_degree,
probability = data.cor$probability)
tmp <- rbind(data.cor, tmp)
tmp %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
theme(panel.background = element_blank())
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
tmp <- data.frame(to_degree = data.cor$from_degree,
from_degree = data.cor$to_degree,
probability = data.cor$probability)
tmp <- rbind(data.cor, tmp)
tmp %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
theme(panel.background = element_blank())
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
tmp <- data.frame(to_degree = data.cor$from_degree,
from_degree = data.cor$to_degree,
probability = data.cor$probability)
tmp <- rbind(data.cor, tmp)
tmp %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability))
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
tmp <- data.frame(to_degree = data.cor$from_degree,
from_degree = data.cor$to_degree,
probability = data.cor$probability)
tmp <- rbind(data.cor, tmp)
tmp %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0")
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
tmp <- data.frame(to_degree = data.cor$from_degree,
from_degree = data.cor$to_degree,
probability = data.cor$probability)
tmp <- rbind(data.cor, tmp)
tmp %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability))
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
tmp <- data.frame(to_degree = data.cor$from_degree,
from_degree = data.cor$to_degree,
probability = data.cor$probability)
tmp <- rbind(data.cor, tmp)
# tmp %>%
#   ggplot(aes(from_degree, to_degree)) +
#     geom_raster(aes(fill = probability)) +
#     scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
#     scale_x_discrete(breaks=seq(20, 134, 5)) +
#     scale_y_discrete(breaks=seq(20, 134, 5)) +
#     theme(panel.background = element_blank())
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
tmp <- data.frame( from_degree = data.cor$to_degree,
to_degree = data.cor$from_degree,
probability = data.cor$probability)
tmp <- rbind(data.cor, tmp)
# tmp %>%
#   ggplot(aes(from_degree, to_degree)) +
#     geom_raster(aes(fill = probability)) +
#     scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
#     scale_x_discrete(breaks=seq(20, 134, 5)) +
#     scale_y_discrete(breaks=seq(20, 134, 5)) +
#     theme(panel.background = element_blank())
ata.cor, tmp
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree)
data.cor
data.e
data.e %>%
dplyr::select(from_degree, to_degree)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree)
data.e %>%
dplyr::select(from_degree, to_degree)
data.cor <-
library(dplyr)
library(igraph)
library(tidyr)
data1 <- read.csv("primaryschool.csv", sep="\t", header=FALSE)
colnames(data1) <- c("time", "i", "j", "classi", "classj")
data2 <- read.csv("metadata_primaryschool.txt", sep="\t", header=FALSE)
colnames(data2) <- c("i", "class", "sex")
edges <- data.frame(table(data1 %>% dplyr::select(i, j))) %>%
filter(Freq > 0)
network <- graph_from_data_frame(edges, directed=FALSE, vertices=data2)
network
V(network)$sex[V(network)$sex == "Unknown"] <- NA
V(network)$sex[1:50]
V(network)$class[1:50]
E(network)$Freq[1:50]
V(network)$degree <- degree(network)
V(network)$degree[1:50]
print(paste("Mean of sample:", mean(V(network)$degree)))
print(paste("Variance of sample:", var(V(network)$degree)))
print(paste("Median of sample:", median(V(network)$degree)))
print(paste("Min of sample:", min(V(network)$degree)))
print(paste("Max of sample:", max(V(network)$degree)))
library(ggplot2)
data.v <- data.frame(name=V(network)$name,
class=as.factor(V(network)$class),
degree=V(network)$degree)
data.v %>%
ggplot(aes(x=degree)) +
geom_histogram(aes(y=..density..))
library(nortest)
print(paste("Pearson", pearson.test(data.v$degree)$p))
print(paste("Lilliefors", lillie.test(data.v$degree)$p))
print(paste("Anderson.Darling", ad.test(data.v$degree)$p))
print(paste("Shapiro.Wilk", shapiro.test(data.v$degree)$p))
count.of.teachers <- data.v %>% filter(class == "Teachers") %>% nrow()
(data.v %>% arrange(-degree))[1:count.of.teachers,]
edge_density(network)
class <- unique(V(network)$class)
for(i in class) {
subgraph <- induced_subgraph(network, V(network)[class == i])
print(paste("density of", i, ":", edge_density(subgraph)))
}
data.e <- as_long_data_frame(network) %>%
mutate(from = as.character(from), to = as.character(to))
tmp <- data.frame(to = data.e$from, from = data.e$to, Freq = data.e$Freq,
to_class = data.e$from_class, from_class = data.e$to_class)
tmp <- rbind(data.e %>% select(from, to, Freq, to_class, from_class), tmp)
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
mean_distance(network)
max(distances(network))
transitivity(network)
V(network)$transitivity <- transitivity(network, type="local")
V(network)$transitivity[1:50]
data.v$transitivity <- V(network)$transitivity
(data.v %>% arrange(-transitivity))[1:10,]
library(reshape)
data.cor <- data.e %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
tmp <- data.frame( from_degree = data.cor$to_degree,
to_degree = data.cor$from_degree,
probability = data.cor$probability)
tmp <- rbind(data.cor, tmp)
tmp %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
theme(panel.background = element_blank())
