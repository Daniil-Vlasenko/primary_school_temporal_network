median_data %>%
dplyr::select(median, quantile_1, quantile_2, std)
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=c(class, sample)), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data <- rbind(median_tr_data, median_te_data) %>% mutate(class_sample = paste(class, semple))
library(tidyr)
median_data <- rbind(median_tr_data, median_te_data) %>%
unite(class, sample, sep = "/", remove = FALSE)
median_tr_data_1 <- read.csv(median_tr_files[1]) %>% mutate(class="high", sample="tr")
median_tr_data_2 <- read.csv(median_tr_files[2]) %>% mutate(class="low", sample="tr")
median_te_data_1 <- read.csv(median_test_files[1]) %>% mutate(class="high", sample="te")
median_te_data_2 <- read.csv(median_test_files[2]) %>% mutate(class="low", sample="te")
median_tr_data <- rbind(median_tr_data_1, median_tr_data_2)
median_te_data <- rbind(median_te_data_1, median_te_data_2)
median_data <- rbind(median_tr_data, median_te_data) %>%
unite(class, sample, sep = "/", remove = FALSE)
median_data
rbind(median_tr_data, median_te_data) %>%
unite(class, sample, sep = "/", remove = FALSE)
median_data <- rbind(median_tr_data, median_te_data) %>%
unite(class, sample, sep = " ", remove = FALSE)
median_data
paste(median_data$class, median_data$sample)
median_data$class
median_tr_data_1 <- read.csv(median_tr_files[1]) %>% mutate(class="high", sample="tr")
median_tr_data_2 <- read.csv(median_tr_files[2]) %>% mutate(class="low", sample="tr")
median_te_data_1 <- read.csv(median_test_files[1]) %>% mutate(class="high", sample="te")
median_te_data_2 <- read.csv(median_test_files[2]) %>% mutate(class="low", sample="te")
median_tr_data <- rbind(median_tr_data_1, median_tr_data_2)
median_te_data <- rbind(median_te_data_1, median_te_data_2)
median_data$class
median_data <- rbind(median_tr_data, median_te_data)
median_data$class
paste(median_data$class, median_data$sample)
median_data$class_sample <- paste(median_data$class, median_data$sample)
median_data
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class_sample), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class_sample), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=sample), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median(median_tr_data_1$median)
median(median_tr_data_2$median)
median_tr_files = c("../results/tmp/features te w=0.2 r =1/high/median_tr.txt",
"../results/tmp/features te w=0.2 r =1/low/median_tr.txt")
median_test_files =c("../results/tmp/features te w=0.2 r =1/high/median_te.txt",
"../results/tmp/features te w=0.2 r =1/low/median_te.txt")
median_tr_data_1 <- read.csv(median_tr_files[1]) %>% mutate(class="high", sample="train")
median_tr_data_2 <- read.csv(median_tr_files[2]) %>% mutate(class="low", sample="train")
median_te_data_1 <- read.csv(median_test_files[1]) %>% mutate(class="high", sample="test")
median_te_data_2 <- read.csv(median_test_files[2]) %>% mutate(class="low", sample="test")
median_tr_data <- rbind(median_tr_data_1, median_tr_data_2)
median_te_data <- rbind(median_te_data_1, median_te_data_2)
median_data <- rbind(median_tr_data, median_te_data)
median_data$class_sample <- paste(median_data$class, median_data$sample)
median(median_tr_data_1$median)
median(median_tr_data_2$median)
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_tr_files = c("../results/tmp/features te w=0.0 r =1/high/median_tr.txt",
"../results/tmp/features te w=0.0 r =1/low/median_tr.txt")
median_test_files =c("../results/tmp/features te w=0.0 r =1/high/median_te.txt",
"../results/tmp/features te w=0.0 r =1/low/median_te.txt")
median_tr_data_1 <- read.csv(median_tr_files[1]) %>% mutate(class="high", sample="train")
median_tr_data_2 <- read.csv(median_tr_files[2]) %>% mutate(class="low", sample="train")
median_te_data_1 <- read.csv(median_test_files[1]) %>% mutate(class="high", sample="test")
median_te_data_2 <- read.csv(median_test_files[2]) %>% mutate(class="low", sample="test")
median_tr_data <- rbind(median_tr_data_1, median_tr_data_2)
median_te_data <- rbind(median_te_data_1, median_te_data_2)
median_data <- rbind(median_tr_data, median_te_data)
median_data$class_sample <- paste(median_data$class, median_data$sample)
median(median_tr_data_1$median)
median(median_tr_data_2$median)
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("sum", "quantile_1", "quantile_2", "std"),
columnLabels=c("sum", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("mean", "quantile_1", "quantile_2", "std"),
columnLabels=c("mean", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
library(dplyr)
library(igraph)
library(tidyr)
library(RColorBrewer)
data1 <- read.csv("primaryschool.csv", sep="\t", header=FALSE)
colnames(data1) <- c("time", "i", "j", "classi", "classj")
data2 <- read.csv("metadata_primaryschool.txt", sep="\t", header=FALSE)
colnames(data2) <- c("i", "class", "sex")
data1 <- data.frame(table(data1 %>% dplyr::select(i, j))) %>%
filter(Freq > 0)
network <- graph_from_data_frame(data1, directed=FALSE, vertices=data2)
network
V(network)$sex[V(network)$sex == "Unknown"] <- NA
V(network)$sex[1:50]
V(network)$class[1:50]
E(network)$Freq[1:50]
V(network)$degree <- degree(network)
print(paste0("the firts 10 degrees: ", toString(V(network)$degree[1:10])))
V(network)$wdegree <- strength(network, weights=E(network)$Freq)
print(paste0("the firts 10 wdegree: ", toString(V(network)$wdegree[1:10])))
print(paste("Mean of sample:", mean(V(network)$degree)))
print(paste("Variance of sample:", var(V(network)$degree)))
print(paste("Median of sample:", median(V(network)$degree)))
print(paste("Min of sample:", min(V(network)$degree)))
print(paste("Max of sample:", max(V(network)$degree)))
print(paste("Mean of sample:", mean(V(network)$wdegree)))
print(paste("Variance of sample:", var(V(network)$wdegree)))
print(paste("Median of sample:", median(V(network)$wdegree)))
print(paste("Min of sample:", min(V(network)$wdegree)))
print(paste("Max of sample:", max(V(network)$wdegree)))
library(ggplot2)
vertices <- igraph::as_data_frame(network, what="vertices")
vertices %>%
ggplot(aes(x=degree)) +
geom_histogram(aes(y=..density..))
vertices %>%
ggplot(aes(x=wdegree)) +
geom_histogram(aes(y=..density..))
library(nortest)
print(paste("Pearson", pearson.test(vertices$degree)$p))
print(paste("Lilliefors", lillie.test(vertices$degree)$p))
print(paste("Anderson.Darling", ad.test(vertices$degree)$p))
print(paste("Shapiro.Wilk", shapiro.test(vertices$degree)$p))
print(paste("Pearson", pearson.test(vertices$wdegree)$p))
print(paste("Lilliefors", lillie.test(vertices$wdegree)$p))
print(paste("Anderson.Darling", ad.test(vertices$wdegree)$p))
print(paste("Shapiro.Wilk", shapiro.test(vertices$wdegree)$p))
V(network)$anwd <- knn(network, weights=E(network)$Freq)[[1]]
vertices$anwd <- V(network)$anwd
vertices %>%
ggplot(aes(x=degree, y=anwd)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Weighted Vertex Degree") +
ylab("Average Neighbor Weighted Degree")
colors <- c("deeppink1","cyan4",
"brown1","olivedrab4",
"cyan1","deeppink4",
"olivedrab1","royalblue3",
"gold1","gold4",
"black")
vertices %>%
ggplot(aes(x=degree, y=anwd, color=class)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
xlab("Weighted Vertex Degree") +
ylab("Average Neighbor Weighted Degree") +
scale_color_manual(values=colors)
cor(vertices$degree, vertices$anwd, method="pearson")
cor(vertices$degree, vertices$anwd, method="spearman")
count.of.teachers <- vertices %>% filter(class == "Teachers") %>% nrow()
(vertices %>% arrange(-degree))[1:count.of.teachers,]
install.packages("ggraph")
library(ggrpah)
install.packages("ggraph")
library(ggraph)
library(ggrpah)
library(ggraph)
g <- sample_gnp(10,0.4)
## Not run:
ggraph(g,layout="centrality",centrality = closeness(g))+
draw_circle(use = "cent")+
geom_edge_link0()+
geom_node_point(shape = 21,fill = "grey25",size = 5)+
theme_graph()+
coord_fixed()
edge_density(network)
class <- unique(V(network)$class)
for(i in class) {
subgraph <- induced_subgraph(network, V(network)[class == i])
print(paste("density of", i, ":", edge_density(subgraph)))
}
A <- as_adjacency_matrix(filter(network, class=="4B"), sparse=FALSE)
library(dplyr)
library(igraph)
library(tidyr)
library(RColorBrewer)
library(dplyr)
library(igraph)
library(tidyr)
library(RColorBrewer)
data1 <- read.csv("primaryschool.csv", sep="\t", header=FALSE)
colnames(data1) <- c("time", "i", "j", "classi", "classj")
data2 <- read.csv("metadata_primaryschool.txt", sep="\t", header=FALSE)
colnames(data2) <- c("i", "class", "sex")
data1 <- data.frame(table(data1 %>% dplyr::select(i, j))) %>%
filter(Freq > 0)
network <- graph_from_data_frame(data1, directed=FALSE, vertices=data2)
network
V(network)$sex[V(network)$sex == "Unknown"] <- NA
V(network)$sex[1:50]
V(network)$class[1:50]
E(network)$Freq[1:50]
V(network)$degree <- degree(network)
print(paste0("the firts 10 degrees: ", toString(V(network)$degree[1:10])))
V(network)$wdegree <- strength(network, weights=E(network)$Freq)
print(paste0("the firts 10 wdegree: ", toString(V(network)$wdegree[1:10])))
print(paste("Mean of sample:", mean(V(network)$degree)))
print(paste("Variance of sample:", var(V(network)$degree)))
print(paste("Median of sample:", median(V(network)$degree)))
print(paste("Min of sample:", min(V(network)$degree)))
print(paste("Max of sample:", max(V(network)$degree)))
print(paste("Mean of sample:", mean(V(network)$wdegree)))
print(paste("Variance of sample:", var(V(network)$wdegree)))
print(paste("Median of sample:", median(V(network)$wdegree)))
print(paste("Min of sample:", min(V(network)$wdegree)))
print(paste("Max of sample:", max(V(network)$wdegree)))
library(ggplot2)
vertices <- igraph::as_data_frame(network, what="vertices")
vertices %>%
ggplot(aes(x=degree)) +
geom_histogram(aes(y=..density..))
vertices %>%
ggplot(aes(x=wdegree)) +
geom_histogram(aes(y=..density..))
library(nortest)
print(paste("Pearson", pearson.test(vertices$degree)$p))
print(paste("Lilliefors", lillie.test(vertices$degree)$p))
print(paste("Anderson.Darling", ad.test(vertices$degree)$p))
print(paste("Shapiro.Wilk", shapiro.test(vertices$degree)$p))
print(paste("Pearson", pearson.test(vertices$wdegree)$p))
print(paste("Lilliefors", lillie.test(vertices$wdegree)$p))
print(paste("Anderson.Darling", ad.test(vertices$wdegree)$p))
print(paste("Shapiro.Wilk", shapiro.test(vertices$wdegree)$p))
V(network)$anwd <- knn(network, weights=E(network)$Freq)[[1]]
vertices$anwd <- V(network)$anwd
vertices %>%
ggplot(aes(x=degree, y=anwd)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Weighted Vertex Degree") +
ylab("Average Neighbor Weighted Degree")
colors <- c("deeppink1","cyan4",
"brown1","olivedrab4",
"cyan1","deeppink4",
"olivedrab1","royalblue3",
"gold1","gold4",
"black")
vertices %>%
ggplot(aes(x=degree, y=anwd, color=class)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
xlab("Weighted Vertex Degree") +
ylab("Average Neighbor Weighted Degree") +
scale_color_manual(values=colors)
cor(vertices$degree, vertices$anwd, method="pearson")
cor(vertices$degree, vertices$anwd, method="spearman")
count.of.teachers <- vertices %>% filter(class == "Teachers") %>% nrow()
(vertices %>% arrange(-degree))[1:count.of.teachers,]
sna::gplot.target(g, degree(g,gmode="graph"),
main="Degree",
circ.lab = FALSE,
circ.col="skyblue",
usearrows = FALSE,
vertex.col=c("blue",
rep("red", 32), "yellow"),
edge.col="darkgray")
A <- as_adjacency_matrix(filter(network, class=="4B"), sparse=FALSE)
A <- as_adjacency_matrix(dplyr::filter(network, class=="4B"), sparse=FALSE)
subgraph <- induced_subgraph(network, V(network)[class == "4B"])
A <- as_adjacency_matrix(subgraph, sparse=FALSE)
library(network)
g <- network::as.network.matrix(A)
library(sna)
sna::gplot.target(g, degree(g,gmode="graph"),
main="Degree",
circ.lab = FALSE,
circ.col="skyblue",
usearrows = FALSE,
# vertex.col=c("blue", rep("red", 32), "yellow"),
edge.col="darkgray")
E(netwok)
E(network)
E(network)$Freq
-E(network)$Freq
closeness(network, weight=-E(network)$Freq)
closeness(network, weight=E(network)$Freq)
closeness(network, weights=-E(network)$Freq)
closeness(network, weights=E(network)$Freq)
closeness(network, weights=1)
closeness(network, weights=E(network)$Freq)
weights=E(network)$Freq
weights=E(network)$Freq
E(network)$Freq
strength(network, weights=E(network)$Freq)
closeness(network, weights=E(network)$Freq)
closeness(network)
library(dplyr)
library(igraph)
library(tidyr)
library(RColorBrewer)
data1 <- read.csv("primaryschool.csv", sep="\t", header=FALSE)
colnames(data1) <- c("time", "i", "j", "classi", "classj")
data2 <- read.csv("metadata_primaryschool.txt", sep="\t", header=FALSE)
colnames(data2) <- c("i", "class", "sex")
data1 <- data.frame(table(data1 %>% dplyr::select(i, j))) %>%
filter(Freq > 0)
network <- graph_from_data_frame(data1, directed=FALSE, vertices=data2)
network
V(network)$sex[V(network)$sex == "Unknown"] <- NA
V(network)$sex[1:50]
V(network)$class[1:50]
E(network)$Freq[1:50]
V(network)$degree <- degree(network)
print(paste0("the firts 10 degrees: ", toString(V(network)$degree[1:10])))
V(network)$wdegree <- strength(network, weights=E(network)$Freq)
print(paste0("the firts 10 wdegree: ", toString(V(network)$wdegree[1:10])))
print(paste("Mean of sample:", mean(V(network)$degree)))
print(paste("Variance of sample:", var(V(network)$degree)))
print(paste("Median of sample:", median(V(network)$degree)))
print(paste("Min of sample:", min(V(network)$degree)))
print(paste("Max of sample:", max(V(network)$degree)))
print(paste("Mean of sample:", mean(V(network)$wdegree)))
print(paste("Variance of sample:", var(V(network)$wdegree)))
print(paste("Median of sample:", median(V(network)$wdegree)))
print(paste("Min of sample:", min(V(network)$wdegree)))
print(paste("Max of sample:", max(V(network)$wdegree)))
library(ggplot2)
vertices <- igraph::as_data_frame(network, what="vertices")
vertices %>%
ggplot(aes(x=degree)) +
geom_histogram(aes(y=..density..))
vertices %>%
ggplot(aes(x=wdegree)) +
geom_histogram(aes(y=..density..))
library(nortest)
print(paste("Pearson", pearson.test(vertices$degree)$p))
print(paste("Lilliefors", lillie.test(vertices$degree)$p))
print(paste("Anderson.Darling", ad.test(vertices$degree)$p))
print(paste("Shapiro.Wilk", shapiro.test(vertices$degree)$p))
print(paste("Pearson", pearson.test(vertices$wdegree)$p))
print(paste("Lilliefors", lillie.test(vertices$wdegree)$p))
print(paste("Anderson.Darling", ad.test(vertices$wdegree)$p))
print(paste("Shapiro.Wilk", shapiro.test(vertices$wdegree)$p))
V(network)$anwd <- knn(network, weights=E(network)$Freq)[[1]]
vertices$anwd <- V(network)$anwd
vertices %>%
ggplot(aes(x=degree, y=anwd)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Weighted Vertex Degree") +
ylab("Average Neighbor Weighted Degree")
colors <- c("deeppink1","cyan4",
"brown1","olivedrab4",
"cyan1","deeppink4",
"olivedrab1","royalblue3",
"gold1","gold4",
"black")
vertices %>%
ggplot(aes(x=degree, y=anwd, color=class)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
xlab("Weighted Vertex Degree") +
ylab("Average Neighbor Weighted Degree") +
scale_color_manual(values=colors)
cor(vertices$degree, vertices$anwd, method="pearson")
cor(vertices$degree, vertices$anwd, method="spearman")
strength(network, weights=E(network)$Freq)
closeness(network, weights=E(network)$Freq)
closeness(network, weights=1/E(network)$Freq)
betweenness(network, weights=1/E(network)$Freq)
evcent(network, weights=1/E(network)$Freq)
evcent(network, weights=1/E(network)$Freq)$vector
V(network)$closeness <- closeness(network, weights=1/E(network)$Freq)
V(network)$betweenness <- betweenness(network, weights=1/E(network)$Freq)
V(network)$evcent <- evcent(network, weights=1/E(network)$Freq)$vector
(vertices %>% arrange(-wdegree))[1:count.of.teachers,]
(vertices %>% arrange(-closeness))[1:count.of.teachers,]
V(network)$closeness <- closeness(network, weights=1/E(network)$Freq)
vertices$closeness <- V(network)$closeness
V(network)$betweenness <- betweenness(network, weights=1/E(network)$Freq)
vertices$betweenness <- V(network)$betweenness
V(network)$evcent <- evcent(network, weights=1/E(network)$Freq)$vector
vertices$evcent <- V(network)$evcent
(vertices %>% arrange(-closeness))[1:count.of.teachers,]
(vertices %>% arrange(-betweenness))[1:count.of.teachers,]
(vertices %>% arrange(-evcent))[1:count.of.teachers,]
subgraph <- induced_subgraph(network, V(network)[class=="4B" | name=="1521"])
subgraph
subgraph <- induced_subgraph(network, V(network)[class=="4B" | name=="1521"])
A <- as_adjacency_matrix(subgraph, sparse=FALSE)
library(network)
g <- network::as.network.matrix(A)
library(sna)
sna::gplot.target(g, degree(g,gmode="graph"),
main="Degree", circ.lab = FALSE,
circ.col="skyblue", usearrows = FALSE,
# vertex.col=c("blue", rep("red", 32), "yellow"),
edge.col="darkgray")
V(subgraph)$wdegree
V(subgraph)
V(subgraph)$color
V(subgraph)
subgraph
V(subgraph)[class == "4A"]$color <- "royalblue3"
V(subgraph)[class == "Teachers"]$color <- "black"
V(subgraph)$color
V(subgraph)$color
subgraph <- induced_subgraph(network, V(network)[class=="4B" | name=="1521"])
A <- as_adjacency_matrix(subgraph, sparse=FALSE)
library(network)
g <- network::as.network.matrix(A)
library(sna)
V(subgraph)[class == "4B"]$color <- "royalblue3"
V(subgraph)[class == "Teachers"]$color <- "black"
sna::gplot.target(g, V(subgraph)$wdegree,
main="Degree", circ.lab = FALSE,
circ.col="skyblue", usearrows = FALSE,
vertex.col=V(subgraph)$color,
edge.col="darkgray")
subgraph <- induced_subgraph(network, V(network)[class=="4B" | name=="1521"])
A <- as_adjacency_matrix(subgraph, sparse=FALSE)
library(network)
g <- network::as.network.matrix(A)
library(sna)
V(subgraph)[class=="4B" & sex=="male"]$color <- "royalblue3"
V(subgraph)[class=="4B" & sex=="female"]$color <- "pink"
V(subgraph)[class=="Teachers"]$color <- "black"
sna::gplot.target(g, V(subgraph)$wdegree,
main="Degree", circ.lab = TRUE,
circ.col="skyblue", usearrows = FALSE,
vertex.col=V(subgraph)$color,
edge.col="darkgray")
subgraph
V(subgraph)sex
V(subgraph)sex
V(subgraph)$sex
subgraph <- induced_subgraph(network, V(network)[class=="4B" | name=="1521"])
A <- as_adjacency_matrix(subgraph, sparse=FALSE)
library(network)
g <- network::as.network.matrix(A)
library(sna)
V(subgraph)[class=="4B" & sex=="M"]$color <- "dodgerblue"
V(subgraph)[class=="4B" & sex=="F"]$color <- "pink"
V(subgraph)[class=="Teachers"]$color <- "black"
sna::gplot.target(g, V(subgraph)$wdegree,
main="Degree", circ.lab = FALSE,
circ.col="skyblue",
vertex.col=V(subgraph)$color,
edge.col="darkgray")
sna::gplot.target(subgraph, V(subgraph)$wdegree,
circ.lab = FALSE,
circ.col="skyblue", usearrows = FALSE,
vertex.col=V(subgraph)$color,
edge.col="darkgray")
sna::gplot.target(g, V(subgraph)$wdegree,
main="Degree", circ.lab = FALSE,
circ.col="skyblue", usearrows = FALSE,
vertex.col=V(subgraph)$color,
edge.col="darkgray")
