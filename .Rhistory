layout=layout_in_circle)
igraph_options(vertex.size=5, vertex.label.cex=0.5, vertex.label.dist=1, vertex.label.degree=3*pi/2)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
igraph_options(vertex.size=5, vertex.label.cex=0.5, vertex.label.dist=1.5, vertex.label.degree=3*pi/2)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
igraph_options(vertex.size=10, vertex.label.cex=0.5, vertex.label.dist=1.5, vertex.label.degree=3*pi/2)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
igraph_options(vertex.size=8, vertex.label.cex=0.5, vertex.label.dist=1.5, vertex.label.degree=3*pi/2)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
igraph_options(vertex.size=8,
vertex.label.cex=0.5,
vertex.label.dist=1.5,
vertex.label.degree=3*pi/2,
edge.width=2)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
igraph_options(vertex.size=8,
vertex.label.cex=0.5,
vertex.label.dist=1.5,
vertex.label.degree=3*pi/2,
edge.width=1)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
igraph_options(vertex.size=8,
vertex.label.cex=0.5,
vertex.label.dist=1.5,
vertex.label.degree=3*pi/2,
edge.width=1,
edge.curved=0.3)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
igraph_options(vertex.size=8,
vertex.label.cex=0.5,
vertex.label.dist=1.5,
vertex.label.degree=3*pi/2,
edge.width=1)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
igraph_options(vertex.size=8,
vertex.label.cex=0.5,
vertex.label.dist=1.5,
vertex.label.degree=3*pi/2,
edge.width=1,
edge.curved=0)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
igraph_options(vertex.size=8,
vertex.label.cex=0.5,
vertex.label.dist=1.5,
vertex.label.degree=3*pi/2,
edge.width=1)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
plot(network,
layout=layout_with_fr)
igraph_options(vertex.size=1,
vertex.label=NA
edge.width=1)
plot(network,
layout=layout_with_fr)
igraph_options(vertex.size=1,
vertex.label=NA,
edge.width=1)
plot(network,
layout=layout_with_fr)
plot(network,
layout=layout_with_fr)
plot(network,
layout=layout_with_kk)
plot(network,
layout=layout_with_kk)
plot(network, layout=layout_with_kk)
help(layout)
help(layout)
plot(network, layout=component_wise)
igraph_options(vertex.size=1,
vertex.label=NA,
edge.width=1)
plot(network, layout=layout_as_bipartite)
plot(network, layout=layout_as_star)
plot(network, layout=layout_nicely)
plot(network, layout=layout_on_grid)
plot(network, layout=layout_on_grid(dim=3))
plot(network, layout=layout_on_grid, dim =3
plot(network, layout=layout_on_grid, dim =3)
plot(network, layout=layout_on_grid, dim =3)
plot(network, layout=layout_on_sphere)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name), layout=layout_on_sphere)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_with_dh)
igraph_options(vertex.size=8,
vertex.label.cex=0.5,
vertex.label.dist=1.5,
vertex.label.degree=3*pi/2,
edge.width=1)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_with_dh)
igraph_options(vertex.size=8,
vertex.label.cex=0.5,
vertex.label.dist=1.5,
vertex.label.degree=3*pi/2,
edge.width=1)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
gc()
igraph_options(vertex.size=8,
vertex.label.cex=0.5,
vertex.label.dist=1.5,
vertex.label.degree=3*pi/2,
edge.width=1)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
library(dplyr)
library(igraph)
library(tidyr)
data1 <- read.csv("primaryschool.csv", sep="\t", header=FALSE)
colnames(data1) <- c("time", "i", "j", "classi", "classj")
data2 <- read.csv("metadata_primaryschool.txt", sep="\t", header=FALSE)
colnames(data2) <- c("i", "class", "sex")
data1 <- data.frame(table(data1 %>% dplyr::select(i, j))) %>%
filter(Freq > 0)
network <- graph_from_data_frame(data1, directed=FALSE, vertices=data2)
network
V(network)$sex[V(network)$sex == "Unknown"] <- NA
V(network)$sex[1:50]
V(network)$class[1:50]
E(network)$Freq[1:50]
is_connected(network)
V(network)$degree <- degree(network)
V(network)$degree[1:50]
print(paste("Mean of sample:", mean(V(network)$degree)))
print(paste("Variance of sample:", var(V(network)$degree)))
print(paste("Median of sample:", median(V(network)$degree)))
print(paste("Min of sample:", min(V(network)$degree)))
print(paste("Max of sample:", max(V(network)$degree)))
library(ggplot2)
vertices <- igraph::as_data_frame(network, what="vertices")
vertices %>%
ggplot(aes(x=degree)) +
geom_histogram(aes(y=..density..))
library(nortest)
print(paste("Pearson", pearson.test(vertices$degree)$p))
print(paste("Lilliefors", lillie.test(vertices$degree)$p))
print(paste("Anderson.Darling", ad.test(vertices$degree)$p))
print(paste("Shapiro.Wilk", shapiro.test(vertices$degree)$p))
count.of.teachers <- vertices %>% filter(class == "Teachers") %>% nrow()
(vertices %>% arrange(-degree))[1:count.of.teachers,]
edge_density(network)
class <- unique(V(network)$class)
for(i in class) {
subgraph <- induced_subgraph(network, V(network)[class == i])
print(paste("density of", i, ":", edge_density(subgraph)))
}
edges <- as_long_data_frame(network) %>%
mutate(from = as.character(from), to = as.character(to))
tmp <- data.frame(to = edges$from, from = edges$to, Freq = edges$Freq,
to_class = edges$from_class, from_class = edges$to_class)
tmp <- rbind(edges %>% select(from, to, Freq, to_class, from_class), tmp)
tmp %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
tmp %>% filter(from_class == "4B", to_class == "4B") %>%
ggplot(aes(from, to)) +
geom_raster(aes(fill=Freq)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
theme(legend.position="none") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background = element_blank())
mean_distance(network)
max(distances(network))
transitivity(network)
V(network)$transitivity <- transitivity(network, type="local")
V(network)$transitivity[1:50]
vertices$transitivity <- V(network)$transitivity
(vertices %>% arrange(-transitivity))[1:10,]
library(reshape)
data.prob <- edges %>%
dplyr::select(from_degree, to_degree) %>%
table() %>%
data.frame() %>%
mutate(Freq = Freq / sum(Freq)) %>%
dplyr::rename(probability = Freq) %>%
filter(probability > 0)
tmp <- data.frame(from_degree = data.prob$to_degree,
to_degree = data.prob$from_degree,
probability = data.prob$probability)
tmp <- rbind(data.prob, tmp)
tmp %>%
ggplot(aes(from_degree, to_degree)) +
geom_raster(aes(fill = probability)) +
scale_fill_gradient2(low="gray100", mid="gray50", high="gray0") +
scale_x_discrete(breaks=seq(20, 134, 5)) +
scale_y_discrete(breaks=seq(20, 134, 5)) +
theme(panel.background = element_blank())
# cor(data.prob$from_degree, data.prob$to_degree, method="pearson")
# cor(data.prob$from_degree, data.prob$to_degree, method="spearman")
for(i in V(network)[V(network)$class == "Teachers"]) {
print(paste0("neighbors of the teacher with id ", i, ":"))
print(table(neighbors(network, i)$class))
}
igraph_options(vertex.size=8,
vertex.label.cex=0.5,
vertex.label.dist=1.5,
vertex.label.degree=3*pi/2,
edge.width=1)
plot(subgraph(network, (vertices %>% filter(class != "Teachers") %>% arrange(degree))[1:30,]$name),
layout=layout_in_circle)
library(GGally)
library(dplyr)
library(ggplot2)
library(GGally)
library(viridis)
library(gridExtra)
library(dplyr)
library(ggplot2)
library(GGally)
library(viridis)
library(gridExtra)
path = "../results/tmp/features te w=0.0 r =1"
path + "------"
path + "asdsda"
path = "../results/tmp/features te w=0.0 r =1"
median_tr = c("../results/tmp/features te w=0.0 r =1/high/median_tr.txt",
"../results/tmp/features te w=0.0 r =1/low/median_tr.txt")
median_test =c("../results/tmp/features te w=0.0 r =1/high/median_te.txt",
"../results/tmp/features te w=0.0 r =1/low/median_te.txt")
median_tr_data <- read.csv(median_test_files[1])
median_tr_files = c("../results/tmp/features te w=0.0 r =1/high/median_tr.txt",
"../results/tmp/features te w=0.0 r =1/low/median_tr.txt")
median_test_files =c("../results/tmp/features te w=0.0 r =1/high/median_te.txt",
"../results/tmp/features te w=0.0 r =1/low/median_te.txt")
median_tr_data <- read.csv(median_test_files[1])
median_tr_data
median_tr_data_1 <- read.csv(median_tr_files[1]) %>% mutate(class="high")
median_tr_data_2 <- read.csv(median_tr_files[2]) %>% mutate(class="low")
median_te_data_1 <- read.csv(median_test_files[1]) %>% mutate(class="high")
median_te_data_2 <- read.csv(median_test_files[2]) %>% mutate(class="low")
median_tr_data <- rbind(median_tr_data_1, median_tr_data_2)
median_te_data <- rbind(median_te_data_1, median_te_data_2)
median_tr_data_1 <- read.csv(median_tr_files[1]) %>% mutate(class="high")
median_tr_data_2 <- read.csv(median_tr_files[2]) %>% mutate(class="low")
median_te_data_1 <- read.csv(median_test_files[1]) %>% mutate(class="high")
median_te_data_2 <- read.csv(median_test_files[2]) %>% mutate(class="low")
median_tr_data <- rbind(median_tr_data_1, median_tr_data_2)
median_te_data <- rbind(median_te_data_1, median_te_data_2)
median_data <- rbind(median_tr_data, median_te_data)
median_data %>%
dplyr::select(median, quantile_1, quantile_2, std) %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
dplyr::select(median, quantile_1, quantile_2, std)
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=c(class, sample)), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data <- rbind(median_tr_data, median_te_data) %>% mutate(class_sample = paste(class, semple))
library(tidyr)
median_data <- rbind(median_tr_data, median_te_data) %>%
unite(class, sample, sep = "/", remove = FALSE)
median_tr_data_1 <- read.csv(median_tr_files[1]) %>% mutate(class="high", sample="tr")
median_tr_data_2 <- read.csv(median_tr_files[2]) %>% mutate(class="low", sample="tr")
median_te_data_1 <- read.csv(median_test_files[1]) %>% mutate(class="high", sample="te")
median_te_data_2 <- read.csv(median_test_files[2]) %>% mutate(class="low", sample="te")
median_tr_data <- rbind(median_tr_data_1, median_tr_data_2)
median_te_data <- rbind(median_te_data_1, median_te_data_2)
median_data <- rbind(median_tr_data, median_te_data) %>%
unite(class, sample, sep = "/", remove = FALSE)
median_data
rbind(median_tr_data, median_te_data) %>%
unite(class, sample, sep = "/", remove = FALSE)
median_data <- rbind(median_tr_data, median_te_data) %>%
unite(class, sample, sep = " ", remove = FALSE)
median_data
paste(median_data$class, median_data$sample)
median_data$class
median_tr_data_1 <- read.csv(median_tr_files[1]) %>% mutate(class="high", sample="tr")
median_tr_data_2 <- read.csv(median_tr_files[2]) %>% mutate(class="low", sample="tr")
median_te_data_1 <- read.csv(median_test_files[1]) %>% mutate(class="high", sample="te")
median_te_data_2 <- read.csv(median_test_files[2]) %>% mutate(class="low", sample="te")
median_tr_data <- rbind(median_tr_data_1, median_tr_data_2)
median_te_data <- rbind(median_te_data_1, median_te_data_2)
median_data$class
median_data <- rbind(median_tr_data, median_te_data)
median_data$class
paste(median_data$class, median_data$sample)
median_data$class_sample <- paste(median_data$class, median_data$sample)
median_data
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class_sample), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class_sample), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=sample), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median(median_tr_data_1$median)
median(median_tr_data_2$median)
median_tr_files = c("../results/tmp/features te w=0.2 r =1/high/median_tr.txt",
"../results/tmp/features te w=0.2 r =1/low/median_tr.txt")
median_test_files =c("../results/tmp/features te w=0.2 r =1/high/median_te.txt",
"../results/tmp/features te w=0.2 r =1/low/median_te.txt")
median_tr_data_1 <- read.csv(median_tr_files[1]) %>% mutate(class="high", sample="train")
median_tr_data_2 <- read.csv(median_tr_files[2]) %>% mutate(class="low", sample="train")
median_te_data_1 <- read.csv(median_test_files[1]) %>% mutate(class="high", sample="test")
median_te_data_2 <- read.csv(median_test_files[2]) %>% mutate(class="low", sample="test")
median_tr_data <- rbind(median_tr_data_1, median_tr_data_2)
median_te_data <- rbind(median_te_data_1, median_te_data_2)
median_data <- rbind(median_tr_data, median_te_data)
median_data$class_sample <- paste(median_data$class, median_data$sample)
median(median_tr_data_1$median)
median(median_tr_data_2$median)
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_tr_files = c("../results/tmp/features te w=0.0 r =1/high/median_tr.txt",
"../results/tmp/features te w=0.0 r =1/low/median_tr.txt")
median_test_files =c("../results/tmp/features te w=0.0 r =1/high/median_te.txt",
"../results/tmp/features te w=0.0 r =1/low/median_te.txt")
median_tr_data_1 <- read.csv(median_tr_files[1]) %>% mutate(class="high", sample="train")
median_tr_data_2 <- read.csv(median_tr_files[2]) %>% mutate(class="low", sample="train")
median_te_data_1 <- read.csv(median_test_files[1]) %>% mutate(class="high", sample="test")
median_te_data_2 <- read.csv(median_test_files[2]) %>% mutate(class="low", sample="test")
median_tr_data <- rbind(median_tr_data_1, median_tr_data_2)
median_te_data <- rbind(median_te_data_1, median_te_data_2)
median_data <- rbind(median_tr_data, median_te_data)
median_data$class_sample <- paste(median_data$class, median_data$sample)
median(median_tr_data_1$median)
median(median_tr_data_2$median)
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("sum", "quantile_1", "quantile_2", "std"),
columnLabels=c("sum", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("mean", "quantile_1", "quantile_2", "std"),
columnLabels=c("mean", "0.1-quantile", "0.9-quantile","std"))
median_data %>%
ggpairs(diag=list(continuous = wrap("barDiag", alpha=0.7)),
upper=list(continuous = wrap("blank")),
lower=list(continuous = wrap("points", alpha=0.7)),
aes(colour=class), legend=1, columns = c("median", "quantile_1", "quantile_2", "std"),
columnLabels=c("median", "0.1-quantile", "0.9-quantile","std"))
library(dplyr)
library(igraph)
library(tidyr)
library(RColorBrewer)
data1 <- read.csv("primaryschool.csv", sep="\t", header=FALSE)
colnames(data1) <- c("time", "i", "j", "classi", "classj")
data2 <- read.csv("metadata_primaryschool.txt", sep="\t", header=FALSE)
colnames(data2) <- c("i", "class", "sex")
data1 <- data.frame(table(data1 %>% dplyr::select(i, j))) %>%
filter(Freq > 0)
network <- graph_from_data_frame(data1, directed=FALSE, vertices=data2)
network
V(network)$sex[V(network)$sex == "Unknown"] <- NA
V(network)$sex[1:50]
V(network)$class[1:50]
E(network)$Freq[1:50]
V(network)$degree <- degree(network)
print(paste0("the firts 10 degrees: ", toString(V(network)$degree[1:10])))
V(network)$wdegree <- strength(network, weights=E(network)$Freq)
print(paste0("the firts 10 wdegree: ", toString(V(network)$wdegree[1:10])))
print(paste("Mean of sample:", mean(V(network)$degree)))
print(paste("Variance of sample:", var(V(network)$degree)))
print(paste("Median of sample:", median(V(network)$degree)))
print(paste("Min of sample:", min(V(network)$degree)))
print(paste("Max of sample:", max(V(network)$degree)))
print(paste("Mean of sample:", mean(V(network)$wdegree)))
print(paste("Variance of sample:", var(V(network)$wdegree)))
print(paste("Median of sample:", median(V(network)$wdegree)))
print(paste("Min of sample:", min(V(network)$wdegree)))
print(paste("Max of sample:", max(V(network)$wdegree)))
library(ggplot2)
vertices <- igraph::as_data_frame(network, what="vertices")
vertices %>%
ggplot(aes(x=degree)) +
geom_histogram(aes(y=..density..))
vertices %>%
ggplot(aes(x=wdegree)) +
geom_histogram(aes(y=..density..))
library(nortest)
print(paste("Pearson", pearson.test(vertices$degree)$p))
print(paste("Lilliefors", lillie.test(vertices$degree)$p))
print(paste("Anderson.Darling", ad.test(vertices$degree)$p))
print(paste("Shapiro.Wilk", shapiro.test(vertices$degree)$p))
print(paste("Pearson", pearson.test(vertices$wdegree)$p))
print(paste("Lilliefors", lillie.test(vertices$wdegree)$p))
print(paste("Anderson.Darling", ad.test(vertices$wdegree)$p))
print(paste("Shapiro.Wilk", shapiro.test(vertices$wdegree)$p))
V(network)$anwd <- knn(network, weights=E(network)$Freq)[[1]]
vertices$anwd <- V(network)$anwd
vertices %>%
ggplot(aes(x=degree, y=anwd)) +
geom_point() +
geom_smooth(method="lm") +
xlab("Weighted Vertex Degree") +
ylab("Average Neighbor Weighted Degree")
colors <- c("deeppink1","cyan4",
"brown1","olivedrab4",
"cyan1","deeppink4",
"olivedrab1","royalblue3",
"gold1","gold4",
"black")
vertices %>%
ggplot(aes(x=degree, y=anwd, color=class)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
xlab("Weighted Vertex Degree") +
ylab("Average Neighbor Weighted Degree") +
scale_color_manual(values=colors)
cor(vertices$degree, vertices$anwd, method="pearson")
cor(vertices$degree, vertices$anwd, method="spearman")
count.of.teachers <- vertices %>% filter(class == "Teachers") %>% nrow()
(vertices %>% arrange(-degree))[1:count.of.teachers,]
A <- as_adjacency_matrix(karate, sparse=FALSE)
A <- as_adjacency_matrix(network, sparse=FALSE)
A
A <- as_adjacency_matrix(network)
A
, sparse=FALSE
network
A <- as_adjacency_matrix(network, attr="Freq")
network
A
A <- as_adjacency_matrix(network, attr="Freq", sparse=FALSE)
library(network)
install.packages("network")
library(network)
g <- network::as.network.matrix(A)
g
install.packages("sna")
library(sna)
A <- as_adjacency_matrix(network, attr="Freq", sparse=FALSE)
library(network)
g <- network::as.network.matrix(A)
library(sna)
sna::gplot.target(g, degree(g, gmode="graph"),
main="Degree", circ.lab = FALSE,
circ.col="skyblue", usearrows = FALSE,
# vertex.col=c("blue", rep("red", 32), "yellow"),
edge.col="darkgray")
